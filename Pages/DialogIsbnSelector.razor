    @using MyComicsManagerWeb.Models
    @using MyComicsManagerWeb.Services
    @using System.IO

    @inject ComicService ComicService

    <MudDialog>
        <DialogContent>

            <MudContainer Style="max-height: 650px;">

                @if (firstPages == null)
                {
                    <MudText Typo="Typo.h5">First pages Loading ...</MudText>
                }
                else
                {
                    <!--  Les 5 premières pages-->
                    <MudGrid Spacing="2" Justify="Justify.Center">
                        @foreach (var _page in firstPages)
                        {
                            string url = "/covers/isbn/" + _page + "?size=200";
                            int idImage = Int32.Parse(Path.GetFileNameWithoutExtension(_page).Split('-')[1]);
                            <MudItem xs="2">
                                <MudCard>
                                    <MudCardMedia Image="@url" Height="200" />
                                    <MudCardActions>
                                        @if (_processing && idImage == _imageIdProcessed)
                                        {
                                            <MudButton Disabled="true" Variant="Variant.Filled" Color="Color.Primary">
                                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                                                <MudText Class="ms-2">Processing</MudText>
                                            </MudButton>
                                        }
                                        else
                                        {
                                            <MudIconButton Icon="@Icons.Material.Filled.ImageSearch" Color="Color.Default" OnClick="() => launchISBNAnalysis(idImage)" />
                                        }
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                        }
                    </MudGrid>
                }

                @if (lastPages == null)
                {
                    <MudText Typo="Typo.h5">Last pages Loading ...</MudText>
                }
                else
                {
                    <MudGrid Spacing="2" Justify="Justify.Center">
                        @foreach (var _page in lastPages)
                        {
                            string url = "/covers/isbn/" + _page + "?size=200";
                            int idImage = Int32.Parse(Path.GetFileNameWithoutExtension(_page).Split('-')[1]);
                            <MudItem xs="2">
                                <MudCard>
                                    <MudCardMedia Image="@url" Height="200" />
                                    <MudCardActions>
                                        @if (_processing && idImage == _imageIdProcessed)
                                        {
                                            <MudButton Disabled="true" Variant="Variant.Filled" Color="Color.Primary">
                                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                                                <MudText Class="ms-2">Processing</MudText>
                                            </MudButton>
                                        }
                                        else
                                        {
                                            <MudIconButton Icon="@Icons.Material.Filled.ImageSearch" Color="Color.Default" OnClick="() => launchISBNAnalysis(idImage)" />
                                        }
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                        }
                    </MudGrid>
                }

                
                
            </MudContainer>
            <MudSelect T="string" Label="Choose ISBN :" @bind-Value="@selectedISBN">
                @foreach (var isbn in listISBN)
                {
                    // https://stackoverflow.com/questions/66372676/blazor-mudselect-bind-selectedvalues-to-both-id-and-value
                    <MudSelectItem Value="@isbn" />
                }
            </MudSelect>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Error" OnClick="Save">Save</MudButton>
        </DialogActions>

    </MudDialog>

    @code {

        [CascadingParameter] MudDialogInstance MudDialog { get; set; }

        [Parameter] public string Id { get; set; }

        private List<string> firstPages = null;

        private List<string> lastPages = null;

        private string selectedISBN;
        
        private bool _processing = false;
        private int _imageIdProcessed = -1;

        protected List<string> listISBN = new List<string>();

        protected override async Task OnInitializedAsync()
        {
            firstPages = await ComicService.ExtractImages(Id, 5, true);
            lastPages = await ComicService.ExtractImages(Id, 5, false);
        }

        private void Cancel()
        {
            MudDialog.Cancel();
        }

        private void Save()
        {
            MudDialog.Close(DialogResult.Ok(selectedISBN));
        }

        private async void launchISBNAnalysis(int imageId)
        {
            _processing = true;
            _imageIdProcessed = imageId;
            selectedISBN = "";
            listISBN.Clear();
            listISBN = await ComicService.ExtractISBN(Id, imageId);
            if (listISBN.Count > 0)
            {
                selectedISBN = listISBN[0];
            }
            _processing = false;
            _imageIdProcessed = -1;
            this.StateHasChanged();
        }

    }
