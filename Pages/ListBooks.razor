@page "/books"

@using MyComicsManagerWeb.Models
@using MyComicsManagerWeb.Services
@inject BookService _bookService

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    
    <MudButton
        Class="ma-2"
        Link="/comics/import"
        Variant="Variant.Filled"
        EndIcon="@Icons.Material.Filled.UploadFile"
        Color="Color.Primary">
        Import
    </MudButton>
    <MudButton
        Class="ma-2"
        Link="/"
        Variant="Variant.Filled"
        EndIcon="@Icons.Filled.CalendarViewMonth"
        Color="Color.Primary">
        ImageView
    </MudButton>

    @if (Books.Any())
    {
        <MudTable Items="@Books" Hover="true" SortLabel="Sort By"
                  GroupBy="@_groupDefinition"
                  Dense="true"
                  GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
                  GroupFooterClass="mb-4"
                  RowStyle="background-color:var(--mud-palette-white)">
            <ColGroup>
                <col style="width: 60px;"/>
                <col/>
                <col/>
            </ColGroup>
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, object>(x => x.Volume)">Tome</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, object>(x => x.Title)">Titre</MudTableSortLabel></MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>
            <GroupHeaderTemplate>
                <MudTh Class="mud-table-cell-custom-group" colspan="5">@($"{context.GroupName} : {context.Key}")</MudTh>
            </GroupHeaderTemplate>
            <RowTemplate>
                <MudTd DataLabel="Tome">@context.Volume</MudTd>
                <MudTd DataLabel="Titre">@context.Title</MudTd>
                <MudTd DataLabel="Actions">
                    @{
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="() => Delete(context.Id)" Title="Delete"/>
                    }
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new [] {50, 100}"/>
            </PagerContent>
        </MudTable>
    }
    else
    {
        <MudProgressCircular Color="Color.Info" Indeterminate="true"/>
    }

</MudContainer>

@code {

    private List<Book> Books { get; set; } = new();

    private TableGroupDefinition<Book> _groupDefinition = new()
    {
        GroupName = "Série",
        Indentation = false,
        Expandable = false,
        Selector = (e) => e.Serie
    };

    protected override async Task OnInitializedAsync()
    {
        Books = (List<Book>) await _bookService.List();
    }

    private async Task Delete(string id)
    {
        await _bookService.Delete(id);
        Books = (List<Book>) await _bookService.List();
    }
}

