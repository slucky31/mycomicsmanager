@page "/comics/edit/{id}"

@using MyComicsManagerWeb.Models
@using MyComicsManagerWeb.Services

@inject ComicService ComicService
@inject IDialogService DialogService

@if (comic == null)
{
    <p><em>Loading...</em></p>

} else { 
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">

        <EditForm Model="@comic" OnValidSubmit="Update">

            <DataAnnotationsValidator />
            <ValidationSummary />

            <MudCard Class="mt-4">
                <MudCardContent>
                    <MudText Typo="Typo.h5">Données techniques</MudText>
                    <MudGrid Spacing="2">
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Id" Variant="Variant.Filled" @bind-Value="comic.Id" ReadOnly="true" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Library Id" Variant="Variant.Filled" @bind-Value="comic.LibraryId" ReadOnly="true" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="EbookName" Variant="Variant.Filled" @bind-Value="comic.EbookName" ReadOnly="true" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="EbookPath" Variant="Variant.Filled" @bind-Value="comic.EbookPath" ReadOnly="true" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Cover Path" Variant="Variant.Filled" @bind-Value="comic.CoverPath" ReadOnly="true" />
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
                <MudCardContent>
                    <MudText Typo="Typo.h5">Informations sur le comic</MudText>
                    <MudGrid Spacing="2">
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Série" Variant="Variant.Text" @bind-Value="comic.Serie" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Titre" Variant="Variant.Text" @bind-Value="comic.Title" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="ISBN" Variant="Variant.Text" @bind-Value="comic.Isbn" />                            
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Volume" Variant="Variant.Text" @bind-Value="comic.Volume" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Prix" Variant="Variant.Text" @bind-Value="comic.Price" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Catégorie" Variant="Variant.Text" @bind-Value="comic.Category" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Date de publication" Variant="Variant.Text" @bind-Value="comic.Published" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Scénariste" Variant="Variant.Text" @bind-Value="comic.Writer" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Déssinateur" Variant="Variant.Text" @bind-Value="comic.Penciller" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Coloriste" Variant="Variant.Text" @bind-Value="comic.Colorist" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Editeur" Variant="Variant.Text" @bind-Value="comic.Editor" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Langue" Variant="Variant.Text" @bind-Value="comic.LanguageIso" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Pages" Variant="Variant.Text" @bind-Value="comic.PageCount" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="Note" Variant="Variant.Text" @bind-Value="comic.Review" />
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudTextField Label="URL Fiche" Variant="Variant.Text" @bind-Value="comic.FicheUrl" />
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
                <MudCardActions>
                    <MudButton  Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="EvaluateComicAsync">Evaluer</MudButton>
                    <MudButton  Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="ExtractISBNComicAsync">Extraire ISBN</MudButton>
                    <MudButton  Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="SearchComicInfoAsync">Import Données</MudButton>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Enregistrer</MudButton>
                </MudCardActions>
            </MudCard>

        </EditForm>

        

    </MudContainer>



}


@code {
    [Parameter]
    public string Id { get; set; }

    protected Comic comic;

    protected List<string> listISBN = new List<string>();

    protected string selectedISBN = "";

    protected override async Task OnInitializedAsync()
    {
        comic = await ComicService.GetComic(Id);
    }

    private async Task Update()
    {
        comic = await ComicService.UpdateComicAsync(comic);
        this.StateHasChanged();
    }

    private async Task SearchComicInfoAsync()
    {
        comic = await ComicService.SearchComicInfoAsync(comic.Id);
        this.StateHasChanged();
    }

    private async Task ExtractISBNComicAsync()
    {

        var parameters = new DialogParameters();
        parameters.Add("Id", comic.Id);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<DialogIsbnSelector>("Select ISBN", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            if ((null != result.Data.ToString()) && (result.Data.ToString().Contains(':')))
            {
                comic.Isbn = result.Data.ToString().Split(':')[1].Trim();
            }
            else
            {
                comic.Isbn = result.Data.ToString();    
            }
            
            await ComicService.UpdateComicAsync(comic);
            this.StateHasChanged();
        }

    }
    
    private async Task EvaluateComicAsync()
    {

        var parameters = new DialogParameters();
        parameters.Add("Id", comic.Id);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        var dialog = DialogService.Show<DialogReview>("Evaluation", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {

            if (result.Data != null)
            {
                // Si le champ est null, il est initialisé
                comic.ComicReviews ??= new List<ComicReview>();
                // L'évaluation est ajoutée
                comic.ComicReviews.Add((ComicReview)result.Data);
            }
            await ComicService.UpdateComicAsync(comic);
            this.StateHasChanged();
        }

    }

}