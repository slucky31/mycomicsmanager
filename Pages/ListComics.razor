@page "/comics/list"

@using MyComicsManagerWeb.Models
@using MyComicsManagerWeb.Services
@inject ComicService ComicService

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">

    <h1>Comics <a class="btn btn-primary" href="/comics/create">Ajouter</a></h1>

    @if (comics == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {

        <MudGrid>
            @foreach (var comic in comics)
            {
                string coverPath = "/Covers/"+@comic.Id+".jpg?size=256";
                string viewHref = "comics/view/" + @comic.Id;
                string editHref = "comics/edit/" + @comic.Id;
                <MudItem xs="4">
                    <MudCard>
                        <MudCardMedia Image="@coverPath" Height="200" />
                        <MudCardContent>
                            <MudLink Href="@viewHref" Typo="Typo.h5">@comic.Title</MudLink>
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Link="@editHref"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="() => DeleteComic(comic.Id)"></MudIconButton>
                        </MudCardContent>                        
                    </MudCard>
                </MudItem>
            }

        </MudGrid>
    }
</MudContainer>

    @code {
        private IEnumerable<Comic> comics;

        protected override async Task OnInitializedAsync()
        {
            comics = await ComicService.GetComics();
        }

        private async Task DeleteComic(String id)
        {
            await ComicService.DeleteComic(id);
            comics = await ComicService.GetComics();
        }
    }
