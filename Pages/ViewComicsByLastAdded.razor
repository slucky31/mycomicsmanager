@page "/comics/last-added"

@using MyComicsManagerWeb.Models
@using MyComicsManagerWeb.Services
@inject ComicService _comicService
@inject LibraryService _libraryService

<style>
    img {
      border: 1px solid #ddd; /* Gray border */
      border-radius: 4px;  /* Rounded border */
      padding: 5px; /* Some padding */
      height: 150px;
      background-color: white;
    }
    
    /* Add a hover effect (blue shadow) */
    img:hover {
      box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
    }
</style>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    
    <MudButton
        Link="/"
        Class="mb-6"
        Variant="Variant.Filled"
        EndIcon="@Icons.Filled.CalendarViewMonth"
        Color="Color.Primary">
        Accueil
    </MudButton>

    @if (Comics.Any())
    {
        <MudGrid>
            @foreach (var comic in Comics)
            {
                var coverPath = "/covers/" + @comic.CoverPath + "?size=150";
                var viewHref = "/comics/view/" + @comic.Id;
                var editHref = "/comics/edit/" + @comic.Id;
                var downloadHref = "/download/" + _library.RelPath + "/" + @comic.EbookPath;
                <MudItem xs="12" md="6" lg="4">
                    <MudPaper Class="py-1 px-1" >
                        <MudGrid >
                            <MudItem xs="12" Class="d-flex">
                                <MudElement HtmlTag="img" src="@coverPath"/>
                                <MudContainer >
                                    <MudText Typo="Typo.h6">@comic.Serie</MudText>
                                    <MudText Typo="Typo.subtitle1">@comic.Title</MudText>
                                    <MudText Typo="Typo.subtitle1">Tome @comic.Volume</MudText>
                                </MudContainer>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }
    else
    {
        <MudProgressCircular Color="Color.Info" Indeterminate="true"/>
    }

</MudContainer>

@code {

    private List<Comic> Comics { get; set; } = new();
    private Library _library;
    
    protected override async Task OnInitializedAsync()
    {
        _library = await _libraryService.GetSelectedLibrary();
        Comics = (List<Comic>) await _comicService.GetComicsOrderByLastAddedLimitBy(200);
    }
}