@page "/"

@using MyComicsManagerWeb.Models
@using MyComicsManagerWeb.Services
@inject ComicService _comicService
@inject LibraryService _libraryService

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    
    @if (_comics == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <MudButton
            Class="ma-2"
            Link="/comics/import"
            Variant="Variant.Filled"
            EndIcon="@Icons.Material.Filled.UploadFile"
            Color="Color.Primary">
            Import
        </MudButton>
        <MudGrid>
            @foreach (var comic in _comics)
            {
                var coverPath = "/covers/" + @comic.CoverPath + "?size=250";
                var viewHref = "/comics/view/" + @comic.Id;
                var editHref = "/comics/edit/" + @comic.Id;
                var downloadHref = "/download/" + _library.RelPath + "/" + @comic.EbookPath;
                <MudItem xs="12" sm="4" lg="2">
                    <MudCard>
                        <MudCardMedia Image="@coverPath" Style="/*background-color: white; background-size: contain; background-repeat: no-repeat; */"/>
                        <MudCardContent>
                            <MudIconButton Icon="@Icons.Material.Filled.Search" Link="@viewHref" Title="View" />
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Link="@editHref" Title="Edit" />
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="() => DeleteComic(comic.Id)" Title="Delete" />
                            <MudIconButton Icon="@Icons.Material.Filled.Download" Link="@downloadHref" Title="Download"/>
                        </MudCardContent>                        
                    </MudCard>
                </MudItem>
            }

        </MudGrid>
    }
</MudContainer>

@code {
    private IEnumerable<Comic> _comics;

    private Library _library;

    protected override async Task OnInitializedAsync()
    {
        _comics = await _comicService.GetComics();
        _library = await _libraryService.GetSelectedLibrary();
    }

    private async Task DeleteComic(String id)
    {
        await _comicService.DeleteComic(id);
        _comics = await _comicService.GetComics();
    }
}
