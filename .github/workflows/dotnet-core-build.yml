name: .NET Core Build

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:      
      - name : Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.0.x                    
      - name: Install dependencies
        run: dotnet restore                            
      - name: Build
        run: dotnet build --configuration Release --no-restore                    
      - name: Tests
        run: dotnet test --configuration Release --no-build --no-restore --results-directory "test-results" --collect:"Code Coverage"
        env:        
          ConnectionStrings__NeonConnectionUnitTests: ${{ secrets.CONNECTIONSTRINGS_NEONCONNECTIONUNITTESTS }}
      - name: Tests coverage
        run: |
          dotnet tool install --global dotnet-coverage  
          dotnet-coverage merge --output cobertura.xml --output-format cobertura "test-results/**/*.coverage"
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}              
          coverage-reports: cobertura.xml

  docker-web:
    needs: build    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name : Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image MyComicsManagerWeb
        uses: docker/build-push-action@v6
        with:
          outputs: type=cacheonly
          context: .
          platforms: linux/arm64
          file: ./Web/Dockerfile
