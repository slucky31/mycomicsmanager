name: .NET Core

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop, feature/* ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name : Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x     
      -
        name: MyComicsManagerApi Install dependencies
        run: dotnet restore "./WebAPI/WebAPI.csproj"                            
      -
        name: MyComicsManagerApi Build
        run: dotnet build "./WebAPI/WebAPI.csproj" --configuration Release --no-restore
      -
        name : coverlet
        run: dotnet test --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory ./coverage
      - 
        name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}              
          coverage-reports: coverage/**/coverage.cobertura.xml

  docker-api:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name : Checkout
        uses: actions/checkout@v4
      -
        name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/slucky31/mycomicsmanager-web/mycomicsmanager-api

      -
        name: Build and push Docker image MyComicsManagerApi
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./WebAPI/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
