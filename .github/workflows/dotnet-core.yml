name: .NET Core

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop, feature/* ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - 
            name : Checkout
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
        - 
            name: Setup .NET Core
            uses: actions/setup-dotnet@v1
            with:
                dotnet-version: 5.0.x
        - 
            name: MyComicsManagerWeb Install dependencies
            run: dotnet restore "./MyComicsManagerWeb.csproj"
        - 
            name: MyComicsManagerWeb Build
            run: dotnet build "./MyComicsManagerWeb.csproj" --configuration Release --no-restore #-v d : pour log détaillé
        - 
            name: MyComicsManagerWeb Test
            run: dotnet test "./MyComicsManagerWeb.csproj" --no-restore --verbosity normal
  
            
  docker-web:
    needs: build
    # if: ${{ (github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/develop') }}
    runs-on: ubuntu-latest
    steps:      
        - 
            name: Check Out Repo 
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
        -
            name: Set up QEMU
            uses: docker/setup-qemu-action@v1
        -
            name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v1
        -
            name: Docker meta
            id: meta
            uses: crazy-max/ghaction-docker-meta@v2
            with:
              images: ${{ secrets.DOCKERHUB_USERNAME }}/mycomicsmanager-web
              tags: |
                type=ref,event=branch
                type=ref,event=pr
                type=semver,pattern={{version}}
                type=semver,pattern={{major}}.{{minor}}
        -
            name: Login to DockerHub
            uses: docker/login-action@v1
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
            name: Build and push
            uses: docker/build-push-action@v2
            with:
              context: .
              file: ./Dockerfile
              push: true # ${{ github.event_name != 'pull_request' }}
              tags: ${{ steps.meta.outputs.tags }}
