@page "/settings"
@using MyComicsManagerWeb.Models
@using MyComicsManagerWeb.Services
@using MyComicsManager.Model.Shared.Models
@using MyComicsManager.Model.Shared.Services
@inject ComicService ComicService
@inject IWebserviceSettings  WebserviceSettings
@inject ApplicationConfigurationService ApplicationConfigurationService


<MudContainer MaxWidth="MaxWidth.False" >
    
    <NavMenu/>

    <MudCard Class="mt-4">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Version</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid Spacing="2">
                <MudItem xs="12" sm="6">
                    <MudField Label="Version" Variant="Variant.Filled">@versionTag</MudField>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudField Label="Platforme" Variant="Variant.Filled">@platform</MudField>                   
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudField Label="URL Github" Variant="Variant.Filled">@githubUrl</MudField>                    
                </MudItem>
                <MudItem xs="12" sm="6">                    
                    <MudField Label="Branche" Variant="Variant.Filled">@branch</MudField>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudField Label="Commit" Variant="Variant.Filled"><MudLink Href="@commitUrl">@commit</MudLink></MudField>
                </MudItem>
            </MudGrid>
        </MudCardContent>        
    </MudCard>

    <MudCard Class="mt-4">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Paramètres</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid Spacing="2">
                <MudItem xs="12" sm="6">                    
                    <MudField Label="WebserviceUri" Variant="Variant.Filled">@WebserviceSettings.WebserviceUri</MudField>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudField Label="FileUploadDirRootPath" Variant="Variant.Filled">@ApplicationConfigurationService.GetPathFileImport()</MudField>                    
                </MudItem>
                <MudItem xs="12" sm="6">                    
                    <MudField Label="CoversDirRootPath" Variant="Variant.Filled">@ApplicationConfigurationService.GetPathCovers()</MudField>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>

    <MudCard Class="mt-4">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Regénérer les miniatures</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudText>Cette action permet de regénérer l'image de couverture de chaque comic de la librairie</MudText>
        </MudCardContent>
        <MudCardActions>
            <MudButton OnClick="ClearAndGenerateCovers" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Settings">Générer</MudButton>
        </MudCardActions>
        @if (ActionInProgress)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
        }
    </MudCard>



</MudContainer>

@code {

    bool ActionInProgress = false;

    private string branch = ThisAssembly.Git.Branch;

    private string commit = ThisAssembly.Git.Commit;

    private string versionTag = "v" + ThisAssembly.Git.SemVer.Major + "." +
        ThisAssembly.Git.SemVer.Minor + "." +
        ThisAssembly.Git.SemVer.Patch + "-" +
        ThisAssembly.Git.Commit;

    private string platform = @System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription + " - " +
        @System.Runtime.InteropServices.RuntimeInformation.OSArchitecture + " - " +
        @System.Runtime.InteropServices.RuntimeInformation.OSDescription + " - " +
        @System.Runtime.InteropServices.RuntimeInformation.ProcessArchitecture + " - " +
        @System.Runtime.InteropServices.RuntimeInformation.RuntimeIdentifier;

    private string githubUrl = ThisAssembly.Git.RepositoryUrl.EndsWith(".git") ?
        ThisAssembly.Git.RepositoryUrl.Substring(0, ThisAssembly.Git.RepositoryUrl.Length - ".git".Length) :
        ThisAssembly.Git.RepositoryUrl;

    private string commitUrl;

    protected override void OnInitialized()
    {
        commitUrl = githubUrl + "/commit/" + ThisAssembly.Git.Sha;
    }


    private async Task ClearAndGenerateCovers()
    {
        ActionInProgress = true;

        var comics = await ComicService.GetComics();

        foreach(Comic comic in comics)
        {
            await ComicService.ExtractCover(comic.Id);
        }

        ActionInProgress = false;
    }

}