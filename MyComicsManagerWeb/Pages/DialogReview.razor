@using MyComicsManagerWeb.Services
@using Microsoft.AspNetCore.Components
@using MyComicsManager.Model.Shared.Models

@inject ComicService _comicService

<MudDialog>
    <DialogContent>
        
        @if ((!_elements.Any()))
        {
            <MudAlert Severity="Severity.Normal">Ce comic n'a pas encore été lu/évalué.</MudAlert>
        }
        else
        {
            <MudTable Items="@_elements" Hover="true" Breakpoint="Breakpoint.Sm">
                <HeaderContent>
                    <MudTh>Date</MudTh>
                    <MudTh>Note</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Date">@context.Reviewed</MudTd>
                    <MudTd DataLabel="Note"><MudRating SelectedValue="@context.Note" ReadOnly="true"/></MudTd>
                </RowTemplate>
            </MudTable>
        }
        
        <MudForm Class="d-flex flex-row" @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
            <MudItem xs="6" Class="pa-2 mx-2">
                <MudDatePicker Label="Date" @bind-Date="_review.Reviewed" />
            </MudItem>
            <MudItem xs="6" Class="pa-2 mx-2 d-flex flex-row">
                <MudText Typo="Typo.h5">Evaluation :</MudText>
                <MudRating  @bind-SelectedValue="_review.Note"/>
            </MudItem>
        </MudForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="Save">Save</MudButton>
    </DialogActions>

</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string Id { get; set; }

    private MudForm _form;
    private bool _success;
    private string[] _errors = { };
    private List<ComicReview> _elements = new List<ComicReview>();
    public Comic _comic;
    private ComicReview _review = new ComicReview();
    
    protected override async Task OnInitializedAsync()
    {
        _comic = await _comicService.GetComic(Id);
        if (_comic != null && _comic.ComicReviews != null)
        {
            _elements = _comic.ComicReviews;
        }
        
        _review.Reviewed = DateTime.Now;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Save()
    {
        MudDialog.Close(DialogResult.Ok(_review));
    }

}
