@using MyComicsManager.Model.Shared
@using MyComicsManagerWeb.Services
@using Newtonsoft.Json.Converters
@inject ComicService ComicService
@inject LibraryService LibraryService
@using Serilog

@if (SeriesList.Any())
{
    
    <MudStack>
        
        @foreach (var kvp in _comics)
        {
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">@kvp.Key</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    @{
                        var comicsList = @kvp.Value;
                    }
                    <ViewSimpleComics @bind-ComicsList="comicsList" Library="Library"></ViewSimpleComics>    
                </MudCardContent>
            </MudCard>
        }
        
    </MudStack>
}
else
{
    <MudProgressCircular Color="Color.Info" Indeterminate="true"/>
}

@code {

    [Parameter]
    public List<string> SeriesList { get; set; }
    
    [Parameter]
    public Library Library { get; set; }

    private Dictionary<string, List<Comic>> _comics = new();
    
    private MudListItem selectedItem;

    protected override async Task OnInitializedAsync()
    {
        foreach (var serie in SeriesList)
        {
            try
            {
                var comicsList = (List<Comic>) await ComicService.FindBySerie(serie, 100);
                _comics.Add(serie, comicsList);
            }
            catch (HttpRequestException e)
            {
                Log.Warning(e,"L'appel au web service FindBySerie({Serie}) a renvoy√© une erreur", serie);
            }
        }
    }
}