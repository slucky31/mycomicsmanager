    @using MyComicsManager.Model.Shared
    @using MyComicsManagerWeb.Services
    @inject ComicService ComicService
    @inject LibraryService LibraryService



    @if (ComicsList.Any())
    {
        <MudGrid>
            @foreach (var comic in ComicsList)
            {
                var coverPath = "/covers/" + @comic.CoverPath + "?size=150";
                var viewHref = "/comics/view/" + @comic.Id;
                var editHref = "/comics/edit/" + @comic.Id;
                var downloadHref = "/download/" + Library.RelPath + "/" + @comic.EbookPath;
                var serieText = string.IsNullOrEmpty(@comic.Serie) ? "" : @comic.Serie + " - T" + @comic.Volume;
                var datePublished = @comic.Published.ToString("MM/yyyy");

                <MudItem xs="12" sm="12" md="6" lg="6" xl="4">
                    <MudPaper Class="py-1 px-1" >
                        <MudGrid >
                            <MudItem xs="3" sm="2" md="3" lg="3" xl="2">
                                <MudLink Href="@downloadHref" Target="blank">
                                    <MudImage ObjectFit="ObjectFit.Cover" Width="100"Height="150" Src="@coverPath" Alt="@comic.Title" Elevation="25" Class="rounded-lg"/>
                                </MudLink>
                            </MudItem>
                            <MudItem xs="7" sm="9" md="8" lg="8" xl="9">
                                <MudLink Href="@viewHref" Target="blank">
                                    <MudText Typo="Typo.h6">@serieText</MudText>
                                </MudLink>
                                <MudText Typo="Typo.subtitle1">@comic.Title</MudText>
                                <MudText Typo="Typo.subtitle1">@comic.Writer</MudText>
                                <MudText Typo="Typo.subtitle1">@comic.Editor</MudText>
                                <MudText Typo="Typo.subtitle1">@datePublished</MudText>
                            </MudItem>
                            <MudItem xs="2" sm="1" md="1" lg="1" xl="1">
                                <MudIconButton  Class="object-right" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Link="@editHref"/>
                                <MudIconButton  Class="object-right" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="() => DeleteComic(comic.Id)"/>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }
    else
    {
        <MudProgressCircular Color="Color.Info" Indeterminate="true"/>
    }

    @code {

        [Parameter]
        public List<Comic> ComicsList { get; set; }
        
        [Parameter]  
        public EventCallback<List<Comic>> ComicsListChanged { get; set; }
        
        [Parameter]
        public Library Library { get; set; }
        
        private async Task DeleteComic(string id)
        {
            var index = ComicsList.FindIndex(a => a.Id == id);
            await ComicService.DeleteComic(id);
            ComicsList.Remove(ComicsList[index]);
            await ComicsListChanged.InvokeAsync(ComicsList);
        }
    }