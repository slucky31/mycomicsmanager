@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using MyComicsManagerWeb.Models
@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager;
@inject SignInManager<ApplicationUser> SignInManager;

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">MyComicsManager</MudText>
        <MudSpacer />
        
        @if (_user.Identity.IsAuthenticated)
        {
            <MudMenu AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                <ActivatorContent>
                    <MudAvatar>
                        <MudIcon Icon="@Icons.Filled.PersonPin" Size="Size.Large" />
                    </MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudNavMenu Rounded="true" Margin="Margin.Dense" Color="Color.Primary" Class="pa-2">
                        <MudText Typo="Typo.h6" Class="px-4">@_user.Identity.Name</MudText>
                        <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">@_user.FindFirstValue(ClaimTypes.Email)</MudText>
                        <MudDivider Class="my-2" />
                        <MudNavLink Href="/profile" Icon="@Icons.TwoTone.ManageAccounts">Profile</MudNavLink>
                        <MudNavLink OnClick="DarkMode" Icon="@Icons.Material.TwoTone.BrightnessMedium">Switch theme</MudNavLink>
                        <MudNavLink Href="/settings" Icon="@Icons.TwoTone.Settings">Settings</MudNavLink>
                        <MudNavLink OnClick="LogOut" Icon="@Icons.TwoTone.Logout">Log Out</MudNavLink>
                    </MudNavMenu>
                </ChildContent>
            </MudMenu>
        }
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
    <!--<MudAppBar Elevation="1" Style="top: auto; bottom: 0">
        This is footer
    </MudAppBar>-->
</MudLayout>

@code {

    private ClaimsPrincipal _user;
    
    protected override async Task OnInitializedAsync()  
    {  
        _currentTheme = _defaultTheme;
        
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();  
        _user = authState.User;
    } 

    void DarkMode()
    {
        _currentTheme = (_currentTheme != _defaultTheme) ? _defaultTheme : _darkTheme;
    }

    void LogOut()
    {
        NavigationManager.NavigateTo("/Account/LogoutInternal", true);
    }

    MudTheme _currentTheme = new MudTheme();

    readonly MudTheme _defaultTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#272c34",
            Surface = "#f5f5f5"
        }
    };

    readonly MudTheme _darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    };
}
