    @using MyComicsManagerWeb.Models
    @using MyComicsManagerWeb.Services
    @inject ComicService _comicService
    @inject LibraryService _libraryService

    <style>
        img {
          border: 1px solid #ddd; /* Gray border */
          border-radius: 4px;  /* Rounded border */
          padding: 5px; /* Some padding */
          height: 150px;
          background-color: white;
        }
        
        /* Add a hover effect (blue shadow) */
        img:hover {
          box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
        }
                            
    </style>

    @if (ComicsList.Any())
    {
        <MudGrid>
            @foreach (var comic in ComicsList)
            {
                var coverPath = "/covers/" + @comic.CoverPath + "?size=150";
                var viewHref = "/comics/view/" + @comic.Id;
                var editHref = "/comics/edit/" + @comic.Id;
                var downloadHref = "/download/" + Library.RelPath + "/" + @comic.EbookPath;
                
                <MudItem xs="12" md="6" lg="4">
                    <MudPaper Class="py-1 px-1" >
                        <MudGrid >
                            <MudItem xs="2">
                                <MudElement HtmlTag="a"
                                            href="@downloadHref"
                                            target="blank"
                                            rel="noopener noreferrer">
                                    <MudElement HtmlTag="img" src="@coverPath" />
                                </MudElement>
                            </MudItem>
                            <MudItem xs="10">
                                <MudContainer >
                                    <MudText Typo="Typo.h6">@comic.Serie <MudIconButton  Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Link="@editHref"/></MudText>
                                    <MudElement HtmlTag="a"
                                            href="@viewHref"
                                            target="blank"
                                            rel="noopener noreferrer">
                                        <MudText Typo="Typo.subtitle1">@comic.Title</MudText>
                                    </MudElement>
                                    <MudText Typo="Typo.subtitle1">Tome @comic.Volume</MudText>
                                    <MudIconButton  Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="() => DeleteComic(comic.Id)"/>
                                </MudContainer>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    }
    else
    {
        <MudProgressCircular Color="Color.Info" Indeterminate="true"/>
    }

    @code {

        [Parameter]
        public List<Comic> ComicsList { get; set; }
        
        [Parameter]  
        public EventCallback<List<Comic>> ComicsListChanged { get; set; }
        
        [Parameter]
        public Library Library { get; set; }
        
        private async Task DeleteComic(string id)
        {
            var index = ComicsList.FindIndex(a => a.Id == id);
            await _comicService.DeleteComic(id);
            ComicsList.Remove(ComicsList[index]);
            await ComicsListChanged.InvokeAsync(ComicsList);
        }
    }